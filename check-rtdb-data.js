/**
 * Script de diagnostic pour v√©rifier les donn√©es RTDB
 */

import { rtdb } from './src/services/firebase.js'
import { ref as rtdbRef, get as rtdbGet } from 'firebase/database'

async function checkRTDBData() {
  try {
    console.log('üìä V√©rification des donn√©es RTDB...')
    
    // V√©rifier la structure des tenants
    const tenantsRef = rtdbRef(rtdb, 'tenants')
    const tenantsSnapshot = await rtdbGet(tenantsRef)
    
    if (tenantsSnapshot.exists()) {
      const tenants = tenantsSnapshot.val()
      console.log('‚úÖ Tenants trouv√©s:', Object.keys(tenants))
      
      // Pour chaque tenant, v√©rifier les disponibilit√©s
      for (const tenantId of Object.keys(tenants)) {
        const disposRef = rtdbRef(rtdb, `tenants/${tenantId}/disponibilites`)
        const disposSnapshot = await rtdbGet(disposRef)
        
        if (disposSnapshot.exists()) {
          const dispos = disposSnapshot.val()
          const disposCount = Object.keys(dispos).length
          console.log(`üìÖ Tenant ${tenantId}: ${disposCount} disponibilit√©s`)
          
          // Afficher quelques exemples
          const exemples = Object.values(dispos).slice(0, 3)
          exemples.forEach((dispo, i) => {
            console.log(`   Exemple ${i + 1}:`, {
              id: dispo.id,
              collaborateurId: dispo.collaborateurId,
              date: dispo.date,
              lieu: dispo.lieu,
              heure_debut: dispo.heure_debut,
              heure_fin: dispo.heure_fin
            })
          })
        } else {
          console.log(`‚ö†Ô∏è Tenant ${tenantId}: Aucune disponibilit√©`)
        }
      }
    } else {
      console.log('‚ùå Aucun tenant trouv√© en RTDB')
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification RTDB:', error)
  }
}

checkRTDBData()
